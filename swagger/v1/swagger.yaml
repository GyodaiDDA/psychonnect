---
openapi: 3.0.1
info:
  title: Psychonnect API
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
paths:
  "/admin/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - name: user_payload
      in: body
      schema:
        type: object
        properties:
          user:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              role:
                type: integer
                enum:
                - patient: 0
                  physician: 1
                  blocked: 9
                  admin: 10
        required:
        - user
    patch:
      summary: Changes an user role
      tags:
      - Admin
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Role successfully updated
        '401':
          description: Not authorized
        '403':
          description: User is not admin
    delete:
      summary: Deletes an user
      tags:
      - Admin
      security:
      - bearerAuth: []
      responses:
        '204':
          description: user successfully deleted
        '404':
          description: user not found
        '403':
          description: not authorized
  "/login":
    post:
      summary: Login do usuário
      tags:
      - Autenticação
      security: []
      parameters: []
      responses:
        '200':
          description: login successful
        '401':
          description: user does not exist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
              - email
              - password
  "/medications":
    get:
      summary: List all medications
      tags:
      - Medication
      security: []
      responses:
        '200':
          description: List returned with success
    post:
      summary: Create new medication
      tags:
      - Medication
      security: []
      parameters: []
      responses:
        '201':
          description: medicação criada com sucesso
        '422':
          description: Invalid data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                substance:
                  type: string
                dosage:
                  type: number
                measure:
                  type: string
              required:
              - substance
              - dosage
              - measure
  "/medications/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Finds a specific medication
      tags:
      - Medication
      security: []
      responses:
        '200':
          description: Medication found
        '404':
          description: Medication not found
    put:
      summary: Updates medication
      tags:
      - Medication
      security: []
      parameters: []
      responses:
        '200':
          description: Medication successfully updated
        '404':
          description: Medication not found
        '422':
          description: Item already in the database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                substance:
                  type: string
                dosage:
                  type: number
                measure:
                  type: string
    delete:
      summary: Deletes medication
      tags:
      - Medication
      security: []
      responses:
        '204':
          description: Medication successfully deleted
        '404':
          description: Medication not found
  "/prescriptions":
    get:
      summary: Consults current treatment
      tags:
      - Prescriptions
      security:
      - bearerAuth: []
      parameters:
      - name: patient_id
        in: query
        required: true
        schema:
          type: integer
      - name: medication_id
        in: query
        required: false
        schema:
          type: integer
      - name: time
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: returns current treament
        '404':
          description: patient not found
    post:
      summary: Creates new prescription
      tags:
      - Prescriptions
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: prescription successfully created
        '422':
          description: invalid prescription
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_id:
                  type: integer
                physician_id:
                  type: integer
                current_user_id:
                  type: integer
                medication_id:
                  type: integer
                quantity:
                  type: number
                time:
                  type: string
              required:
              - patient_id
              - physician_id
              - current_user_id
              - medication_id
              - quantity
              - time
  "/prescriptions/history/{patient_id}":
    get:
      summary: Consults treatment history
      tags:
      - Prescriptions
      security:
      - bearerAuth: []
      parameters:
      - name: patient_id
        in: path
        required: true
        schema:
          type: integer
      - name: medication_id
        in: query
        required: false
        schema:
          type: integer
      - name: time
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: time treatment history
        '404':
          description: patient not found
  "/prescriptions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Shows a specific prescription
      tags:
      - Prescriptions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: prescription found
        '404':
          description: prescription not found
    put:
      summary: Updates a prescription
      tags:
      - Prescriptions
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: prescription updated
        '404':
          description: prescription not found
        '422':
          description: invalid medication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                time:
                  type: string
    delete:
      summary: Deletes a prescription
      tags:
      - Prescriptions
      security:
      - bearerAuth: []
      responses:
        '204':
          description: prescription deleted by admin
        '404':
          description: prescription not found
        '403':
          description: unauthorized
  "/secret":
    get:
      summary: protected endpoint
      tags:
      - Auth
      security:
      - bearerAuth: []
      responses:
        '200':
          description: access granted
        '401':
          description: User not found (ActiveRecord::RecordNotFound)
  "/users":
    post:
      summary: Creates new user
      tags:
      - Users
      security: []
      parameters: []
      responses:
        '201':
          description: patient user created
        '422':
          description: user with role admin not created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                    role:
                      type: integer
                      enum:
                      - patient: 0
                        physician: 1
                        blocked: 9
                        admin: 10
                  required:
                  - name
                  - email
                  - password
                  - role
              required:
              - user
  "/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Finds a specific user
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: user cannot see other user info
        '404':
          description: user not found
    put:
      summary: Updates an user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: user updated
        '422':
          description: non processable entity
        '401':
          description: access denied
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
servers:
- url: "{scheme}://{defaultHost}"
  variables:
    scheme:
      default: http
    defaultHost:
      default: localhost
